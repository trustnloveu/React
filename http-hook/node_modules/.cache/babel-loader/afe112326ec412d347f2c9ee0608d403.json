{"ast":null,"code":"var _jsxFileName = \"/Users/yang-euijin/development/web/react/react-basic-custom-hook/http-hook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport useHttp from \"./hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //* State\n  const [tasks, setTasks] = useState([]); //* Method\n\n  const transformTasks = traskObject => {\n    const loadedTask = [];\n\n    for (const taskKey in traskObject) {\n      loadedTask.push({\n        id: taskKey,\n        text: traskObject[taskKey].text\n      });\n    }\n\n    setTasks(loadedTask);\n  };\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  }; //* HTTP HOOK\n\n\n  const {\n    isLoading,\n    error,\n    sendRequest: fetchTasks\n  } = useHttp(); //* useEffect\n\n  useEffect(() => {\n    fetchTasks({\n      url: \"https://react-test-98851-default-rtdb.firebaseio.com/tasks.json\"\n    }, transformTasks);\n  }, [fetchTasks]); //* return\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3QapvwoJZfWeMEkerBpIx1ugNIA=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yang-euijin/development/web/react/react-basic-custom-hook/http-hook/src/App.js"],"names":["React","useEffect","useState","Tasks","NewTask","useHttp","App","tasks","setTasks","transformTasks","traskObject","loadedTask","taskKey","push","id","text","taskAddHandler","task","prevTasks","concat","isLoading","error","sendRequest","fetchTasks","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAFa,CAIb;;AACA,QAAMO,cAAc,GAAIC,WAAD,IAAiB;AACtC,UAAMC,UAAU,GAAG,EAAnB;;AAEA,SAAK,MAAMC,OAAX,IAAsBF,WAAtB,EAAmC;AACjCC,MAAAA,UAAU,CAACE,IAAX,CAAgB;AAAEC,QAAAA,EAAE,EAAEF,OAAN;AAAeG,QAAAA,IAAI,EAAEL,WAAW,CAACE,OAAD,CAAX,CAAqBG;AAA1C,OAAhB;AACD;;AAEDP,IAAAA,QAAQ,CAACG,UAAD,CAAR;AACD,GARD;;AAUA,QAAMK,cAAc,GAAIC,IAAD,IAAU;AAC/BT,IAAAA,QAAQ,CAAEU,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACD,GAFD,CAfa,CAmBb;;;AACA,QAAM;AAAEG,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAgDlB,OAAO,EAA7D,CApBa,CAsBb;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,UAAU,CACR;AACEC,MAAAA,GAAG,EAAE;AADP,KADQ,EAIRf,cAJQ,CAAV;AAMD,GAPQ,EAON,CAACc,UAAD,CAPM,CAAT,CAvBa,CAgCb;;AACA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEP;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAET,KADT;AAEE,MAAA,OAAO,EAAEa,SAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA5CQjB,G;UAoB+CD,O;;;KApB/CC,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\n\nimport useHttp from \"./hooks/use-http\";\n\nfunction App() {\n  //* State\n  const [tasks, setTasks] = useState([]);\n\n  //* Method\n  const transformTasks = (traskObject) => {\n    const loadedTask = [];\n\n    for (const taskKey in traskObject) {\n      loadedTask.push({ id: taskKey, text: traskObject[taskKey].text });\n    }\n\n    setTasks(loadedTask);\n  };\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  //* HTTP HOOK\n  const { isLoading, error, sendRequest: fetchTasks } = useHttp();\n\n  //* useEffect\n  useEffect(() => {\n    fetchTasks(\n      {\n        url: \"https://react-test-98851-default-rtdb.firebaseio.com/tasks.json\",\n      },\n      transformTasks\n    );\n  }, [fetchTasks]);\n\n  //* return\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}